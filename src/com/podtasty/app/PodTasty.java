package com.podtasty.app;

import static com.codename1.ui.CN.*;
import com.codename1.io.Log;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.FontImage;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.ui.Toolbar;
import com.podtasty.GUI.Login;
import com.podtasty.GUI.PodcastComments;
import java.io.IOException;
import java.net.URISyntaxException;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class PodTasty {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

       addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        try{    
        Login hi = new Login();
        Toolbar tb=hi.getToolbar();
        
        tb.addMaterialCommandToSideMenu("HOME", FontImage.MATERIAL_HOME, ev->{});
        tb.addMaterialCommandToSideMenu("PROFILE", FontImage.MATERIAL_PERSON, ev->{});
        tb.addMaterialCommandToSideMenu("TIMELINE", FontImage.MATERIAL_PAGES, ev->{});
        hi.addComponent(new Label("Hi World"));

        } catch(IOException e) {
            System.out.println(e.getMessage());
        }
       
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
